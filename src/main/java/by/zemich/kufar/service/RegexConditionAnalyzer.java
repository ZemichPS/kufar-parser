package by.zemich.kufar.service;

import by.zemich.kufar.service.api.ConditionAnalyzer;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;

import java.util.regex.Pattern;

@Service
@RequiredArgsConstructor
public class RegexConditionAnalyzer implements ConditionAnalyzer {

    private final Pattern DEFECT_PATTERN = Pattern.compile(
            "(?i)(?x)" + // Игнорировать регистр и разрешить комментарии
                    "(" +
                    // Разбитый или поврежденный экран, стекло, камера
                    "разбит(,)?\\s+но\\s+вс[её]\\s+(функции)?\\s+работа[ею]т|" +
                    "(раз)?бит[аеоы]*(ый|е)?\\s+(немного\\s|слегка\\s|незначительн[ао]\\s)?((задн[ие]е|задняя)\\s+ст[её]кл[ао]|экран|камера|дисплей|дисплейный модуль)|" +
                    "(задн[ие]е|задняя\\s+)?(ст[её]кл[ао]|экран|камер[аы]|дисплей|дисплейный модуль)\\s+(немного\\s|слегка\\s|незначительн[ао])?\\s(раз)?бит[аеоы]*(ый|е)?|" +
                    "(требует[юе]т|необходим[оа]|нужн[ао])\\s+(замена|заменить)\\s+(экран(а)?|матриц[ыи]|диспл[еэ][йя])|" +

                    // Трещины, сколы, повреждения
                    "присутству[юе]т\\s+(трещ[еи]нки)|" +
                    "разбита задняя пан[еэ]ль|" +
                    "трещин[аы]\\s+на\\s+([еиэ]кране|дисплее|дисплейном\\sмодуле)|" +
                    "(матрица|экран|дисплей)\\s+(теч[её]т|пот[ёе]к(ла)?)|" +
                    "([эие]кран|дисплейный\\sмодуль|дисплей)\\s+под\\s+замену|" +
                    "(скол\\s+на|трещин[аы]|бит[оеы]\\s+пиксел[ьией])|" +
                    // Проблемы с Face ID или другими компонентами
                    "не\\s+работает(?:\\s+(Face\\s?ID|фэйс\\s+айди))?|" +
                    // Проблемы после падения или ремонта
                    "после\\s+(падения.*полоса|ремонта)|" +
                    // Поврежденные устройства
                    "поврежд[её]н[аоы]?|" +
                    // Проблемы с iCloud
                    "заблокирован\\s+(?:на\\s+)?iCloud|" +
                    "забыт[ао]?\\s+пароль(?:\\s+от)?\\s+iCloud|" +
                    "нет\\s+пароля(?:\\s+от)?\\s+iCloud|" +
                    // Общие признаки неисправности
                    "не\\s+(включается|ловит\\s+сеть|рабочае)|" +
                    "(?:прода[юю]?)?\\s*(так\\s+как\\s+)?нету\\s+смысла\\s+(чинить|ремонтировать|восстановить|починить)|" +
                    "перестал(а)\\s+(работать)|" +
                    "нет\\s+(сети|экрана|дисплея)|" +
                    "под\\s+восстановлени[ея]|" +
                    "может\\s+(сам\\s)?перезагру(жаться|зиться)|" +
                    "на\\s+запчасти|" +
                    "на\\s+зп|" +
                    "в\\s+нерабочем\\s+сост[оа]янии|" +
                    "не\\s+включается|" +
                    "пару\\s+(трещин|трещинок)|" +
                    "выгоревш[ие]й\\s+([эеи]кран|дисплей|дисплейный\\sмодуль)|" +
                    "сильн[оа]\\s+разбит|" +
                    "не\\s+(видит|определя[еи]т)\\s+(sim|сим)\\s+(карт[уы])?|" +
                    "вс[её]\\s+работает\\s+кроме\\s+" +
                    ")"
    );

    public boolean isFullyFunctional(String details) {
        if (details == null || details.isEmpty()) {
            return false;
        }
        return !DEFECT_PATTERN.matcher(details.toLowerCase()).find();
    }
}


